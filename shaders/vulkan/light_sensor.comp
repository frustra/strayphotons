#version 450
#extension GL_EXT_nonuniform_qualifier : enable

#define MAX_LIGHT_SENSORS 64

#include "../lib/types_common.glsl"
#include "../lib/util.glsl"

layout(local_size_x = MAX_LIGHT_SENSORS) in;

layout(binding = 0) uniform sampler2D shadowMap;

layout(binding = 1) writeonly buffer LightSensorResults {
    vec3 sensorIlluminance[MAX_LIGHT_SENSORS];
};

INCLUDE_LAYOUT(binding = 2)
#include "lib/light_data_uniform.glsl"

struct LightSensor {
    vec3 position;
    vec3 direction;
};

layout(binding = 3, std140) uniform LightSensorData {
    int sensorCount;
    LightSensor sensors[MAX_LIGHT_SENSORS];
};

layout(set = 1, binding = 0) uniform sampler2D textures[];

#define DIFFUSE_ONLY_SHADING
#define SHADOWS_ENABLED
#define LIGHTING_GELS

#include "../lib/shading.glsl"

void main() {
    uint index = gl_LocalInvocationIndex;
    if (index >= sensorCount) return;

    LightSensor sensor = sensors[index];
    sensorIlluminance[index] = DirectShading(sensor.position, vec3(1.0), sensor.direction, sensor.direction, 1, 0);
}
