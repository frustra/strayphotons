/*
 * Stray Photons - Copyright (C) 2025 Jacob Wirth
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

#version 460

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

#include "../lib/types_common.glsl"
#include "../lib/util.glsl"

layout(binding = 0) uniform sampler3D voxelRadiance;
layout(binding = 1) uniform sampler3D voxelNormals;

layout(binding = 2, rgba16f) uniform image2DArray radianceOut;

INCLUDE_LAYOUT(binding = 3)
#include "lib/view_states_uniform.glsl"

layout(binding = 4) uniform VoxelStateUniform {
    VoxelState voxelInfo;
};

layout(constant_id = 0) const int CASCADE_NUM = 0;
layout(constant_id = 1) const int NUM_SAMPLES = 4;
layout(constant_id = 2) const float SAMPLE_LENGTH = 4;
layout(constant_id = 3) const float VOXEL_SCALE = 1;

#include "../lib/voxel_shared.glsl"
#include "lib/rc_shared.glsl"

void main() {
    if (any(greaterThanEqual(gl_GlobalInvocationID, imageSize(radianceOut)))) return;
    ivec3 xyr = ivec3(gl_GlobalInvocationID);

    ViewState view = views[0];
    vec3 viewPos = view.invViewMat[3].xyz;
	viewPos.y -= 1.3;
    vec3 viewVoxelPos = (voxelInfo.worldToVoxel * vec4(viewPos, 1.0)).xyz;

	float invSamples = 1.0 / NUM_SAMPLES;
	float theta = xyr.z * 2 * M_PI * invSamples;
	vec2 sampleDir = vec2(sin(theta), cos(theta));
	vec4 sampleValue = TraceGridLineScaled(xyr.xy, xyr.xy + sampleDir * SAMPLE_LENGTH, viewVoxelPos.y, VOXEL_SCALE);

    imageStore(radianceOut, xyr, sampleValue);
}
