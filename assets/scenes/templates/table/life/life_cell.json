{
	"components": {
		"transform": {},
		"signal_output": {
			"neighbor_count": 0,
			"alive": 0
		},
		"signal_bindings": {
			"life_eval": "scoperoot/neighbor_count == 3 || (scoperoot/neighbor_count == 2 && scoperoot/alive)",
			"next_alive": "scoperoot/force_toggle ? !scoperoot/alive : scoperoot/life_eval"
		},
		"event_input": {},
		"event_bindings": {
			"/physics/collision/force_found": {
				"outputs": ["scoperoot/signal/set/force_toggle"],
				"set_value": true
			},
			"/life/neighbor_alive": {
				"outputs": ["scoperoot/signal/add/neighbor_count"],
				"modify": "event ? 1 : -1"
			},
			"/life/toggle_alive": {
				"outputs": ["scoperoot/signal/set/alive", "scoperoot/signal/clear/force_toggle"],
				"modify": "scoperoot/next_alive"
			},
			"/signal/set/alive": {
				"outputs": ["scoperoot/life/notify_neighbors", "light/set/renderable.emissive"],
				"filter": "event != scoperoot/alive"
			}
		},
		"physics": {
			"shapes": {
				"box": [0.03, 0.03, 0.03],
				"transform": {
					"translate": [0, 0.015, 0]
				}
			},
			"type": "Static",
			"contact_report_force": 1
		},
		"script": [
			{
				"prefab": "life_cell",
				"parameters": {
					"board_size": [32, 32]
				}
			},
			{
				"onTick": "signal_from_event",
				"parameters": {
					"outputs": ["alive", "neighbor_count", "force_toggle"]
				}
			},
			{
				"onTick": "event_from_signal",
				"parameters": {
					"/life/toggle_alive": "scoperoot/alive != scoperoot/next_alive"
				}
			}
		]
	},
	"entities": [
		{
			"name": "light",
			"transform": {
				"parent": "scoperoot",
				"translate": [0, 0.015, 0],
				"scale": 0.03
			},
			"renderable": {
				"model": "box"
			},
			"event_input": {},
			"script": [
				{
					"onTick": "component_from_event",
					"parameters": {
						"outputs": "renderable.emissive"
					}
				}
			]
		},
		{
			"name": "debug",
			"transform": {
				"aprent": "scoperoot",
				"translate": [0, 0.03, 0],
				"scale": 0.01
			},
			"_renderable": {
				"model": "box",
				"color_override": [0, 0, 0, 1]
			},
			"_script": {
				"onTick": "component_from_signal",
				"parameters": {
					"renderable.color_override.r": "scoperoot/neighbor_count < 2 || scoperoot/neighbor_count > 3",
					"renderable.color_override.g": "scoperoot/alive",
					"renderable.color_override.b": "scoperoot/next_alive"
				}
			}
		}
	]
}
